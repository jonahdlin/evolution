{"version":3,"sources":["constants/Constants.js","utils/UtilFunctions.js","utils/CreatureGeneRandomizers.js","constants/Classes.js","components/CanvasFood.jsx","components/CanvasCreature.jsx","constants/Mixins.js","constants/Theme.js","styles/ControlPanel.jsx","components/ControlPanel.jsx","styles/CreatureInfo.jsx","components/CreatureInfo.jsx","styles/WorldCanvas.jsx","components/WorldCanvas.jsx","utils/Hooks.js","utils/CreatureLogic.js","styles/App.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["STARTING_ENERGY","ANGLE_TURN_MAX","Math","PI","VARIATION_ANGLE_TURN_MAX","doesOccurWithProbability","probability","random","getRandomValueInRange","min","max","getRandomPosition","xmin","xmax","ymin","ymax","Position","isInRectangleWithBottomRight","p","pRect","wRect","hRect","x","y","generateUniqueId","replace","c","r","toString","round","value","decimals","Number","concat","getNewPosition","currentPosition","distance","direction","xAdvance","cos","yAdvance","sin","newX","newY","randomizeSpeed","randomizeStrength","randomizeBoredomFood","randomizeBoredomMate","randomizeEnergyLostToChild","randomizeEnergyLostToCombat","randomizeLikelihoodPursueFood","randomizeMatingAgreeableness","randomizeLikelihoodTurnRight","likelihoodTurnLeft","randomizeLikelihoodTurnLeft","likelihoodTurnRight","randomizeTurnLikelihoods","leftProbUnfixed","rightProbUnfixed","corrector","left","right","randomizeAngleTurn","randomizeVariationAngleTurn","randomizeDirection","Timestamp","second","minute","hour","day","year","Object","classCallCheck","this","_second","_minute","_hour","_day","_year","createClass","key","secondsToIncrement","newSecond","carryover","floor","newMinute","newHour","newDay","newYear","incrementBySeconds","get","_x","_y","position2","dx","abs","dy","sqrt","Food","id","position","_id","_position","CreatureCombatResult","winnerId","winnerEnergyLoss","loserId","loserEnergyLoss","Creature","paramObj","isUndefined","_speed","speed","_strength","strength","_boredomFood","boredomFood","_boredomMate","boredomMate","_energyLostToChild","energyLostToChild","_energyLostToCombat","energyLostToCombat","_likelihoodPursueFood","likelihoodPursueFood","_matingAgreeableness","matingAgreeableness","randomizedLikelihoods","_likelihoodTurnRight","_likelihoodTurnLeft","_angleTurn","angleTurn","_variationAngleTurn","variationAngleTurn","_direction","directions","_energy","energy","_isSeekingMate","_idOfMate","_isSeekingFood","_idOfFood","_locationOfFood","angle","foods","_this","p1","w1","h1","p2","w2","h2","intersectingFoods","foodId","currFood","push","getIntersectingFoods","forEach","changeEnergy","creatures","changeDirection","opposite","adjacent","atan","selectedDirection","probObj","probObjKeys","keys","probabilityArray","reduce","acc","index","length","nextKey","lastStep","selector","i","selectOutcomeWithProbabilities","center","directionModifier","nearbyFoods","distanceTo","getFoodsInProximity","nearbyCreatures","isEmpty","randomFoodId","opponent","mate","displayName","isSeekingMate","idOfMate","isSeekingFood","idOfFood","locationOfFood","CanvasFood","context","food","fillStyle","fillRect","CanvasCreature","_ref","creature","showVisionCircle","showDirection","isSelected","beginPath","arc","lineWidth","stroke","dir","tipX","tipY","moveTo","lineTo","fill","FlexCenterRow","ControlPanelWrapper","styled","div","_templateObject","ControlPanelRowWrapper","_templateObject2","SliderWrapper","_templateObject3","ButtonWrapper","_templateObject4","InputWrapper","_templateObject5","ControlPanel","creaturesToSpawn","simulationSpeed","showVisionCircles","showDirections","handleSpeedUpdate","handleClickPause","handleUpdateCreaturesToSpawn","handleClickSpawnCreatures","handleClickShowVisionCircles","handleClickShowDirections","react_default","a","createElement","Button","onClick","Slider","onChange","event","Input","target","Typography","Checkbox","checked","CreatureInfoWrapper","CreatureInfo_templateObject","CreatureInfoPiece","CreatureInfo_templateObject2","CreatureInfo","statusObj","status","map","renderStatus","genesObj","genes","gene","renderGenes","CanvasWrapper","WorldCanvas_templateObject","ColumnWrapper","WorldCanvas_templateObject2","MainCanvas","canvas","WorldCanvas_templateObject3","WorldCanvas","canvasDom","useRef","_useState","useState","_useState2","slicedToArray","setCreaturesToSpawn","_useState3","_useState4","canvasContext","setCanvasContext","_useState5","_useState6","lastTimestampProcessed","setLastTimestampProcessed","_useState7","_useState8","timestamp","setTimestamp","_useState9","_useState10","setSimulationSpeed","_useState11","_useState12","simulationPaused","setSimulationPaused","_useState13","_useState14","setShowVisionCircles","_useState15","_useState16","setShowDirections","_useState17","_useState18","creatureInfoId","setCreatureInfoId","useEffect","current","getContext","callback","delay","savedCallback","setInterval","clearInterval","useInterval","incBySec","width","clientHeight","height","handleClickScreen","positionClicked","offsetX","offsetY","addEventListener","removeEventListener","updateCreaturesObject","scanSurroundingsAndUpdateState","consumeFoods","changePosition","nextPosition","isDead","updateCreaturePositons","stringOut","components_ControlPanel","val","handleSpawnCreatures","ref","clearRect","totalSeconds","renderObjects","components_CreatureInfo","AppWrapper","App_templateObject","App","components_WorldCanvas","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1c413a3.chunk.js","sourcesContent":["export const FOOD_SPAWN_PROBABILITY = 0.3;\r\n\r\nexport const FOOD_WIDTH = 20;\r\nexport const FOOD_HEIGHT = 20;\r\n\r\nexport const STARTING_ENERGY = 100;\r\nexport const FOOD_ENERGY = 20;\r\nexport const ENERGY_LOST_TO_MOVEMENT = 1;\r\n\r\nexport const CREATURE_WIDTH = 20;\r\nexport const CREATURE_HEIGHT = 20;\r\n\r\nexport const WORLD_CANVAS_WIDTH = 400;\r\nexport const WORLD_CANVAS_HEIGHT = 400;\r\n\r\nexport const SIGHT_RADIUS = 100;\r\n\r\nexport const CHILD_GENE_VARIATION = 0.1;\r\nexport const CHILD_GENE_RANDOM_MUTATION_PROBABILITY = 0.1;\r\n\r\n/* -------------------- */\r\n/* Debug Values         */\r\n/* -------------------- */\r\n\r\nexport const CREATURE_DIRECTION_DEBUG_ARROW_LENGTH = 50;\r\nexport const CREATURE_DIRECTION_DEBUG_ARROW_TIP_RADIUS = 3;\r\n\r\n/* -------------------- */\r\n/* Control Panel Values */\r\n/* -------------------- */\r\n\r\nexport const DEFAULT_INITIAL_CREATURES = 10;\r\nexport const SIMULATION_SPEED_SLIDER_MIN = 1;\r\nexport const SIMULATION_SPEED_SLIDER_MAX = 500;\r\n\r\n/* -------------------- */\r\n/* Gene randomization   */\r\n/* -------------------- */\r\n\r\nexport const SPEED_MIN = 1;\r\nexport const SPEED_MAX = 10;\r\n\r\nexport const STRENGTH_MIN = 1;\r\nexport const STRENGTH_MAX = 100;\r\n\r\nexport const BOREDOM_FOOD_MIN = 0;\r\nexport const BOREDOM_FOOD_MAX = 0.25;\r\n\r\nexport const BOREDOM_MATE_MIN = 0;\r\nexport const BOREDOM_MATE_MAX = 0.25;\r\n\r\nexport const ENERGY_LOST_TO_CHILD_MIN = 25;\r\nexport const ENERGY_LOST_TO_CHILD_MAX = 250;\r\n\r\nexport const ENERGY_LOST_TO_COMBAT_MIN = 10;\r\nexport const ENERGY_LOST_TO_COMBAT_MAX = 50;\r\n\r\nexport const FOOD_MATE_PREFERENCE_MIN = 0;\r\nexport const FOOD_MATE_PREFERENCE_MAX = 1;\r\n\r\nexport const MATING_AGREEABLENESS_MIN = 0;\r\nexport const MATING_AGREEABLENESS_MAX = 1;\r\n\r\nexport const ANGLE_TURN_MIN = 0;\r\nexport const ANGLE_TURN_MAX = Math.PI * 2;\r\n\r\nexport const VARIATION_ANGLE_TURN_MIN = 0;\r\nexport const VARIATION_ANGLE_TURN_MAX = Math.PI * 2;\r\n","import { Position } from '../constants/Classes';\r\nimport { SIGHT_RADIUS, CREATURE_WIDTH, CREATURE_HEIGHT, FOOD_WIDTH, FOOD_HEIGHT } from '../constants/Constants';\r\n\r\nexport const doesOccurWithProbability = probability => {\r\n  return Math.random() <= probability;\r\n};\r\n\r\n/* takes an object of the form:\r\n{\r\n  outcome1: probability1,\r\n  outcome2: probability2,\r\n  ...\r\n}\r\ne.g.\r\n{\r\n  'out1': 0.25,\r\n  'out2': 0.1,\r\n  'out3': 0.65,\r\n}\r\nassumes probabilities add up to 1, else undefined behaviour\r\nreturns the key of the outcome selected\r\n*/\r\nexport const selectOutcomeWithProbabilities = probObj => {\r\n  const probObjKeys = Object.keys(probObj);\r\n  const probabilityArray = probObjKeys.reduce((acc, key, index) => {\r\n    if (index === probObjKeys.length - 1) { return acc; }\r\n    const nextKey = probObjKeys[index + 1];\r\n    if (index === 0) {\r\n      return acc.concat([[key, 0], [nextKey, probObj[key]]]);\r\n    }\r\n    const lastStep = acc[acc.length - 1][1];\r\n    return acc.concat([[nextKey, lastStep + probObj[key]]]);\r\n  }, []);\r\n  const selector = Math.random();\r\n  // Could be done with binary search, but I'm lazy and inputs aren't too big\r\n  for (let i = 0; i < probabilityArray.length; i++) {\r\n    if (i === probabilityArray.length - 1) {\r\n      return probabilityArray[i][0];\r\n    }\r\n    if (selector >= probabilityArray[i][1] && selector < probabilityArray[i + 1][1]) {\r\n      return probabilityArray[i][0];\r\n    }\r\n  }\r\n};\r\n\r\nexport const getRandomValueInRange = (min, max) => {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\nexport const getRandomPosition = (xmin, xmax, ymin, ymax) => {\r\n  return new Position(\r\n    getRandomValueInRange(xmin, xmax),\r\n    getRandomValueInRange(ymin, ymax)\r\n  );\r\n};\r\n\r\n// is p2 within r of p1\r\nexport const isInRadiusOfPosition = (p1, p2, r) => p1.distanceTo(p2) <= r;\r\n\r\n// is p within the rectangle with bottom right corner at pRect, and width\r\n// and height wRect, hRect\r\nexport const isInRectangleWithBottomRight = (p, pRect, wRect, hRect) => {\r\n  return (\r\n    p.x >= pRect.x &&\r\n    p.x <= pRect.x + wRect &&\r\n    p.y >= pRect.y &&\r\n    p.y <= pRect.y + hRect\r\n  );\r\n};\r\n\r\n// returns true if the rectangle with origin at p1 and width and height w1 and h1\r\n// intersects with the rectangle with origin at p2 and width and height w2 and h2\r\nexport const doRectanglesIntersect = (p1, w1, h1, p2, w2, h2) => {\r\n  return (\r\n    isInRectangleWithBottomRight(p2, p1, w1, h1) ||\r\n    isInRectangleWithBottomRight(new Position(p2.x, p2.y + h2), p1, w1, h1) ||\r\n    isInRectangleWithBottomRight(new Position(p2.x + w2, p2.y), p1, w1, h1) ||\r\n    isInRectangleWithBottomRight(new Position(p2.x + w2, p2.y + h2), p1, w1, h1) ||\r\n    isInRectangleWithBottomRight(p1, p2, w2, h2)\r\n  );\r\n};\r\n\r\n// Taken from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\nexport const generateUniqueId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    var r = Math.random() * 16 | 0; var v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\n// Taken from https://www.jacklmoore.com/notes/rounding-in-javascript/\r\nexport const round = (value, decimals) => {\r\n  return Number(`${Math.round(`${value}e${decimals}`)}e-${decimals}`);\r\n};\r\n\r\n/*\r\nComputes the precise arctan of the angle subtended by the\r\n\"adjacent\" length line and opposite the \"opposite\" length line.\r\n/Returns a value in the range [0, 2 * Math.PI)\r\n*/\r\nexport const arctan = (opposite, adjacent) => {\r\n  // Special case where adjacent is 0\r\n  if (adjacent === 0) {\r\n    return opposite >= 0 ? 0 : Math.PI;\r\n  }\r\n  // Special case where opposite is 0\r\n  if (opposite === 0) {\r\n    return adjacent > 0 ? Math.PI / 2 : 3 * Math.PI / 2;\r\n  }\r\n  // Quadrant 1\r\n  if (opposite > 0 && adjacent > 0) {\r\n    return Math.atan(opposite / adjacent);\r\n  }\r\n  // Quadrant 2\r\n  if (opposite > 0 && adjacent < 0) {\r\n    return Math.PI - Math.atan((-opposite) / adjacent);\r\n  }\r\n  // Quadrant 3\r\n  if (opposite < 0 && adjacent < 0) {\r\n    return Math.PI + Math.atan(opposite / adjacent);\r\n  }\r\n  // Quadrant 4\r\n  return 2 * Math.PI - Math.atan(opposite / (-adjacent));\r\n};\r\n\r\n/*\r\nSee below for descriptions of parameters\r\n*/\r\nexport const getNewPosition = (\r\n  currentPosition,\r\n  distance, // the amount to advance in the direction\r\n  direction, // the direction of motion\r\n  xmin, xmax, ymin, ymax // limiters on movement\r\n) => {\r\n  const xAdvance = distance * Math.cos(direction);\r\n  const yAdvance = distance * Math.sin(direction);\r\n  const newX = Math.min(Math.max(currentPosition.x + xAdvance, xmin), xmax);\r\n  const newY = Math.min(Math.max(currentPosition.y + yAdvance, ymin), ymax);\r\n  return new Position(newX, newY);\r\n};\r\n\r\n/*\r\nreturns object in the form of\r\n{\r\n  id: FoodObject,\r\n  ...\r\n}\r\nfor all foods within the SIGHT_RADIUS of p\r\n*/\r\nexport const getFoodsInProximity = (p, foods) => {\r\n  const nearbyFoods = {};\r\n  for (let foodId in foods) {\r\n    const currFood = foods[foodId];\r\n    if (isInRadiusOfPosition(p, currFood.position, SIGHT_RADIUS)) {\r\n      nearbyFoods[currFood.id] = currFood;\r\n    }\r\n  }\r\n  return nearbyFoods;\r\n};\r\n\r\n/*\r\nreturns object in the form of\r\n{\r\n  id: CreatureObject,\r\n  ...\r\n}\r\nfor all creatures within the SIGHT_RADIUS of p\r\n*/\r\nexport const getCreaturesInProximity = creatures => {\r\n  return {}; // TODO\r\n};\r\n\r\n/*\r\nreturns array of the form [foodId1, foodId2, etc.] for all foods\r\nintersecting a creature at position p\r\n*/\r\nexport const getIntersectingFoods = (p, foods) => {\r\n  const intersectingFoods = [];\r\n  for (let foodId in foods) {\r\n    const currFood = foods[foodId];\r\n    if (\r\n      doRectanglesIntersect(\r\n        p,\r\n        CREATURE_WIDTH,\r\n        CREATURE_HEIGHT,\r\n        currFood.position,\r\n        FOOD_WIDTH,\r\n        FOOD_HEIGHT,\r\n      )\r\n    ) {\r\n      intersectingFoods.push(currFood.id);\r\n    }\r\n  }\r\n  return intersectingFoods;\r\n};\r\n","import {\r\n  SPEED_MIN,\r\n  SPEED_MAX,\r\n  STRENGTH_MIN,\r\n  STRENGTH_MAX,\r\n  BOREDOM_FOOD_MIN,\r\n  BOREDOM_FOOD_MAX,\r\n  BOREDOM_MATE_MIN,\r\n  BOREDOM_MATE_MAX,\r\n  ENERGY_LOST_TO_CHILD_MIN,\r\n  ENERGY_LOST_TO_CHILD_MAX,\r\n  ENERGY_LOST_TO_COMBAT_MIN,\r\n  ENERGY_LOST_TO_COMBAT_MAX,\r\n  FOOD_MATE_PREFERENCE_MIN,\r\n  FOOD_MATE_PREFERENCE_MAX,\r\n  MATING_AGREEABLENESS_MIN,\r\n  MATING_AGREEABLENESS_MAX,\r\n  ANGLE_TURN_MIN,\r\n  ANGLE_TURN_MAX,\r\n  VARIATION_ANGLE_TURN_MIN,\r\n  VARIATION_ANGLE_TURN_MAX,\r\n} from '../constants/Constants';\r\nimport { getRandomValueInRange } from './UtilFunctions';\r\n\r\nexport const randomizeSpeed = () => {\r\n  return getRandomValueInRange(SPEED_MIN, SPEED_MAX);\r\n};\r\n\r\nexport const randomizeStrength = () => {\r\n  return getRandomValueInRange(STRENGTH_MIN, STRENGTH_MAX);\r\n};\r\n\r\nexport const randomizeBoredomFood = () => {\r\n  return getRandomValueInRange(BOREDOM_FOOD_MIN, BOREDOM_FOOD_MAX);\r\n};\r\n\r\nexport const randomizeBoredomMate = () => {\r\n  return getRandomValueInRange(BOREDOM_MATE_MIN, BOREDOM_MATE_MAX);\r\n};\r\n\r\nexport const randomizeEnergyLostToChild = () => {\r\n  return getRandomValueInRange(ENERGY_LOST_TO_CHILD_MIN, ENERGY_LOST_TO_CHILD_MAX);\r\n};\r\n\r\nexport const randomizeEnergyLostToCombat = () => {\r\n  return getRandomValueInRange(ENERGY_LOST_TO_COMBAT_MIN, ENERGY_LOST_TO_COMBAT_MAX);\r\n};\r\n\r\nexport const randomizeLikelihoodPursueFood = () => {\r\n  return getRandomValueInRange(FOOD_MATE_PREFERENCE_MIN, FOOD_MATE_PREFERENCE_MAX);\r\n};\r\n\r\nexport const randomizeMatingAgreeableness = () => {\r\n  return getRandomValueInRange(MATING_AGREEABLENESS_MIN, MATING_AGREEABLENESS_MAX);\r\n};\r\n\r\nexport const randomizeLikelihoodTurnRight = (likelihoodTurnLeft) => {\r\n  return getRandomValueInRange(0, 1 - likelihoodTurnLeft);\r\n};\r\n\r\nexport const randomizeLikelihoodTurnLeft = (likelihoodTurnRight) => {\r\n  return getRandomValueInRange(0, 1 - likelihoodTurnRight);\r\n};\r\n\r\n/* returns an object of the form\r\n{\r\n  left: prob1,\r\n  right: prob2,\r\n}\r\nwhere 0 <= prob1 + prob 2 <= 1\r\n*/\r\nexport const randomizeTurnLikelihoods = () => {\r\n  let leftProbUnfixed = Math.random();\r\n  let rightProbUnfixed = Math.random();\r\n  let centerProbUnfixed = Math.random();\r\n\r\n  const corrector = 1 / (leftProbUnfixed + rightProbUnfixed + centerProbUnfixed);\r\n  return {\r\n    left: leftProbUnfixed * corrector,\r\n    right: rightProbUnfixed * corrector,\r\n  };\r\n};\r\n\r\nexport const randomizeAngleTurn = () => {\r\n  return getRandomValueInRange(ANGLE_TURN_MIN, ANGLE_TURN_MAX);\r\n};\r\n\r\nexport const randomizeVariationAngleTurn = () => {\r\n  return getRandomValueInRange(VARIATION_ANGLE_TURN_MIN, VARIATION_ANGLE_TURN_MAX);\r\n};\r\n\r\nexport const randomizeDirection = () => {\r\n  return getRandomValueInRange(0, 2 * Math.PI);\r\n};\r\n","import { isUndefined, isEmpty } from 'lodash';\r\nimport {\r\n  generateUniqueId,\r\n  selectOutcomeWithProbabilities,\r\n  getRandomValueInRange,\r\n  arctan,\r\n  getNewPosition,\r\n  doesOccurWithProbability,\r\n  getFoodsInProximity,\r\n  getCreaturesInProximity,\r\n  round,\r\n  getIntersectingFoods\r\n} from '../utils/UtilFunctions';\r\nimport {\r\n  randomizeSpeed,\r\n  randomizeStrength,\r\n  randomizeBoredomFood,\r\n  randomizeBoredomMate,\r\n  randomizeEnergyLostToChild,\r\n  randomizeEnergyLostToCombat,\r\n  randomizeLikelihoodPursueFood,\r\n  randomizeMatingAgreeableness,\r\n  randomizeLikelihoodTurnRight,\r\n  randomizeLikelihoodTurnLeft,\r\n  randomizeTurnLikelihoods,\r\n  randomizeAngleTurn,\r\n  randomizeVariationAngleTurn,\r\n  randomizeDirection,\r\n} from '../utils/CreatureGeneRandomizers';\r\nimport { FOOD_ENERGY, ENERGY_LOST_TO_MOVEMENT, STARTING_ENERGY } from './Constants';\r\n\r\nexport class Timestamp {\r\n  constructor(second, minute, hour, day, year) {\r\n    this._second = second || 0;\r\n    this._minute = minute || 0;\r\n    this._hour = hour || 0;\r\n    this._day = day || 0;\r\n    this._year = year || 0;\r\n  }\r\n\r\n  get second() { return this._second; }\r\n  get minute() { return this._minute; }\r\n  get hour() { return this._hour; }\r\n  get day() { return this._day; }\r\n  get year() { return this._year; }\r\n\r\n  get s() { return this.second; }\r\n  get m() { return this.minute; }\r\n  get h() { return this.hour; }\r\n  get d() { return this.day; }\r\n  get y() { return this.year; }\r\n\r\n  get totalSeconds() {\r\n    return this._second +\r\n      this._minute * 60 +\r\n      this._hour * 60 * 60 +\r\n      this._day * 24 * 60 * 60 +\r\n      this._year * 365 * 24 * 60 * 60;\r\n  }\r\n\r\n  get stringOut() {\r\n    return `second:\\t${this._second}\\nminute:\\t${this._minute}\\nhour:\\t${this._hour}\\nday:\\t${this._day}\\nyear:\\t${this._year}`;\r\n  }\r\n\r\n  // non-mutating\r\n  incrementBySeconds(secondsToIncrement) {\r\n    let newSecond = (this._second + secondsToIncrement) % 60;\r\n    let carryover = Math.floor((this._second + secondsToIncrement) / 60);\r\n\r\n    let newMinute = (this._minute + carryover) % 60;\r\n    carryover = Math.floor((this._minute + carryover) / 60);\r\n\r\n    let newHour = (this._hour + carryover) % 60;\r\n    carryover = Math.floor((this._hour + carryover) / 60);\r\n\r\n    let newDay = (this._day + carryover) % 60;\r\n    carryover = Math.floor((this._day + carryover) / 60);\r\n\r\n    let newYear = (this._year + carryover) % 60;\r\n    carryover = Math.floor((this._year + carryover) / 60);\r\n\r\n    return new Timestamp(\r\n      newSecond,\r\n      newMinute,\r\n      newHour,\r\n      newDay,\r\n      newYear\r\n    );\r\n  }\r\n\r\n  incBySec(secondsToIncrement) {\r\n    return this.incrementBySeconds(secondsToIncrement);\r\n  }\r\n};\r\n\r\nexport class Position {\r\n  constructor(x, y) {\r\n    this._x = x || 0;\r\n    this._y = y || 0;\r\n  }\r\n\r\n  get x() {\r\n    return this._x;\r\n  }\r\n\r\n  get y() {\r\n    return this._y;\r\n  }\r\n\r\n  distanceTo(position2) {\r\n    const dx = Math.abs(position2.x - this._x);\r\n    const dy = Math.abs(position2.y - this._y);\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n};\r\n\r\nexport class Food {\r\n  constructor(id, position) {\r\n    this._id = id || generateUniqueId();\r\n    this._position = position;\r\n  }\r\n\r\n  get id() { return this._id; }\r\n  get x() { return this._position.x; }\r\n  get y() { return this._position.y; }\r\n  get position() { return this._position; }\r\n};\r\n\r\nexport class CreatureCombatResult {\r\n  constructor(\r\n    winnerId,\r\n    winnerEnergyLoss,\r\n    loserId,\r\n    loserEnergyLoss\r\n  ) {\r\n    this.winnerId = winnerId;\r\n    this.winnerEnergyLoss = winnerEnergyLoss;\r\n    this.loserId = loserId;\r\n    this.loserEnergyLoss = loserEnergyLoss;\r\n  }\r\n\r\n  get winnerId() { return this.winnerId; }\r\n  get winnerEnergyLoss() { return this.winnerEnergyLoss; }\r\n  get loserId() { return this.loserId; }\r\n  get loserEnergyLoss() { return this.loserEnergyLoss; }\r\n};\r\n\r\n/* Till I change to a better way, paramObj contains any of the following:\r\n\r\n{\r\n  id,\r\n  speed,\r\n  strength,\r\n  boredomFood,\r\n  boredomMate,\r\n  energyLostToChild,\r\n  energyLostToCombat,\r\n  likelihoodPursueFood,\r\n  matingAgreeableness,\r\n  likelihoodTurnRight,\r\n  likelihoodTurnLeft,\r\n  angleTurn,\r\n  variationAngleTurn,\r\n  position,\r\n  direction,\r\n  energy,\r\n}\r\n\r\nAnd values not provided will be randomized */\r\nexport class Creature {\r\n  constructor(paramObj) {\r\n    /* --- Identifiers --- */\r\n    this._id = isUndefined(paramObj.id) ? generateUniqueId() : paramObj.id;\r\n\r\n    /* --- Genes --- */\r\n    this._speed = isUndefined(paramObj.speed) ? randomizeSpeed() : paramObj.speed;\r\n    this._strength = isUndefined(paramObj.strength) ? randomizeStrength() : paramObj.strength;\r\n    this._boredomFood = isUndefined(paramObj.boredomFood) ? randomizeBoredomFood() : paramObj.boredomFood;\r\n    this._boredomMate = isUndefined(paramObj.boredomMate) ? randomizeBoredomMate() : paramObj.boredomMate;\r\n    this._energyLostToChild = isUndefined(paramObj.energyLostToChild) ? randomizeEnergyLostToChild() : paramObj.energyLostToChild;\r\n    this._energyLostToCombat = isUndefined(paramObj.energyLostToCombat) ? randomizeEnergyLostToCombat() : paramObj.energyLostToCombat;\r\n    this._likelihoodPursueFood = isUndefined(paramObj.likelihoodPursueFood) ? randomizeLikelihoodPursueFood() : paramObj.likelihoodPursueFood;\r\n    this._matingAgreeableness = isUndefined(paramObj.matingAgreeableness) ? randomizeMatingAgreeableness() : paramObj.matingAgreeableness;\r\n\r\n    // turning likelihoods are probabilities that must add up to <= 1\r\n    if (isUndefined(paramObj.likelihoodTurnRight) || isUndefined(paramObj.likelihoodTurnLeft)) {\r\n      if (isUndefined(paramObj.likelihoodTurnRight) && isUndefined(paramObj.likelihoodTurnLeft)) {\r\n        const randomizedLikelihoods = randomizeTurnLikelihoods();\r\n        this._likelihoodTurnRight = randomizedLikelihoods.right;\r\n        this._likelihoodTurnLeft = randomizedLikelihoods.left;\r\n      } else if (isUndefined(paramObj.likelihoodTurnRight)) {\r\n        this._likelihoodTurnRight = randomizeLikelihoodTurnRight(paramObj.likelihoodTurnLeft);\r\n        this._likelihoodTurnLeft = paramObj.likelihoodTurnLeft;\r\n      } else if (isUndefined(paramObj.likelihoodTurnLeft)) {\r\n        this._likelihoodTurnRight = paramObj.likelihoodTurnRight;\r\n        this._likelihoodTurnLeft = randomizeLikelihoodTurnLeft(paramObj.likelihoodTurnRight);\r\n      }\r\n    } else {\r\n      this._likelihoodTurnRight = paramObj.likelihoodTurnRight;\r\n      this._likelihoodTurnLeft = paramObj.likelihoodTurnLeft;\r\n    }\r\n    this._angleTurn = isUndefined(paramObj.angleTurn) ? randomizeAngleTurn() : paramObj.angleTurn;\r\n    this._variationAngleTurn = isUndefined(paramObj.variationAngleTurn) ? randomizeVariationAngleTurn() : paramObj.variationAngleTurn;\r\n\r\n    /* --- Status --- */\r\n    this._position = isUndefined(paramObj.position) ? new Position(0, 0) : paramObj.position;\r\n    this._direction = isUndefined(paramObj.direction) ? randomizeDirection() : paramObj.directions; // an angle in radian\r\n    this._energy = isUndefined(paramObj.energy) ? STARTING_ENERGY : paramObj.energy;\r\n\r\n    this._isSeekingMate = false;\r\n    this._idOfMate = null;\r\n    this._isSeekingFood = false;\r\n    this._idOfFood = null;\r\n    this._locationOfFood = null;\r\n  }\r\n\r\n  get position() { return this._position; }\r\n\r\n  get direction() { return this._direction; }\r\n\r\n  get isDead() { return this._energy === 0; }\r\n\r\n  get genes() {\r\n    return {\r\n      'id': {\r\n        displayName: 'Id',\r\n        value: this._id,\r\n      },\r\n      'speed': {\r\n        displayName: 'Speed',\r\n        value: round(this._speed, 2),\r\n      },\r\n      'strength': {\r\n        displayName: 'Strength',\r\n        value: round(this._strength, 2),\r\n      },\r\n      'boredomFood': {\r\n        displayName: 'Boredom food',\r\n        value: round(this._boredomFood, 2),\r\n      },\r\n      'boredomMate': {\r\n        displayName: 'Boredom mate',\r\n        value: round(this._boredomMate, 2),\r\n      },\r\n      'energyLostToChild': {\r\n        displayName: 'Energy lost to child',\r\n        value: round(this._energyLostToChild, 2),\r\n      },\r\n      'energyLostToCombat': {\r\n        displayName: 'Energy lost to combat',\r\n        value: round(this._energyLostToCombat, 2),\r\n      },\r\n      'likelihoodPursueFood': {\r\n        displayName: 'Likelihood pursue food',\r\n        value: round(this._likelihoodPursueFood, 2),\r\n      },\r\n      'matingAgreeableness': {\r\n        displayName: 'Mating agreeableness',\r\n        value: round(this._matingAgreeableness, 2),\r\n      },\r\n      'likelihoodTurnRight': {\r\n        displayName: 'Likelihood turn right',\r\n        value: round(this._likelihoodTurnRight, 2),\r\n      },\r\n      'likelihoodTurnLeft': {\r\n        displayName: 'Likelihood turn left',\r\n        value: round(this._likelihoodTurnLeft, 2),\r\n      },\r\n      'angleTurn': {\r\n        displayName: 'Angle turn',\r\n        value: round(this._angleTurn, 2),\r\n      },\r\n      'variationAngleTurn': {\r\n        displayName: 'Variation angle turn',\r\n        value: round(this._variationAngleTurn, 2),\r\n      },\r\n    };\r\n  }\r\n\r\n  get status() {\r\n    return {\r\n      'position': {\r\n        displayName: 'Position',\r\n        value: `(x: ${round(this._position.x, 2)}, y: ${round(this._position.y, 2)})`,\r\n      },\r\n      'direction': {\r\n        displayName: 'Direction',\r\n        value: `${round(this._direction, 2)} radians`,\r\n      },\r\n      'energy': {\r\n        displayName: 'Energy',\r\n        value: round(this._energy, 0),\r\n      },\r\n      'isSeekingMate': {\r\n        displayName: 'Is seeking mate',\r\n        value: this._isSeekingMate ? 'True' : 'False',\r\n      },\r\n      'idOfMate': {\r\n        displayName: 'Id of mate',\r\n        value: this._idOfMate,\r\n      },\r\n      'isSeekingFood': {\r\n        displayName: 'Is seeking food',\r\n        value: this._isSeekingFood ? 'True' : 'False',\r\n      },\r\n      'idOfFood': {\r\n        displayName: 'Id of food',\r\n        value: this._idOfFood,\r\n      },\r\n      'locationOfFood': {\r\n        displayName: 'Location of food',\r\n        value: this._locationOfFood\r\n          ? `(x: ${round(this._locationOfFood.x, 2)}, y: ${round(this._locationOfFood.y, 2)})`\r\n          : null,\r\n      },\r\n    };\r\n  }\r\n\r\n  changePosition(position) {\r\n    if (position.x === this._position.x && position.y === this._position.y) {\r\n      return;\r\n    }\r\n    this._position = position;\r\n    this._energy -= ENERGY_LOST_TO_MOVEMENT;\r\n  }\r\n\r\n  changeDirection(angle) {\r\n    this._direction = angle % (2 * Math.PI);\r\n  }\r\n\r\n  changeEnergy(energy) {\r\n    this._energy = energy;\r\n  }\r\n\r\n  consumeFoods(foods) {\r\n    const intersectingFoods = getIntersectingFoods(this._position, foods);\r\n    // console.log(intersectingFoods);\r\n    intersectingFoods.forEach(id => {\r\n      this.changeEnergy(this._energy + FOOD_ENERGY);\r\n      delete foods[id];\r\n    });\r\n  }\r\n\r\n  // Computes and returns the next position of the creature given other creatures,\r\n  // food, and boundaries for movement. Computes based off current creature state\r\n  // (i.e. does NOT perform proximity check). Does NOT mutate the creature object\r\n  // in case the caller wishes to perform additional sanity checks on the movement.\r\n  nextPosition(creatures, foods, xmin, xmax, ymin, ymax) {\r\n    /* ------------------ */\r\n    /* Mate Pursuit       */\r\n    /* ------------------ */\r\n    if (this._isSeekingMate) {\r\n      // TODO\r\n      return this._position;\r\n    }\r\n\r\n    /* ------------------ */\r\n    /* Combat Pursuit     */\r\n    /* ------------------ */\r\n    if (this._isSeekingMate) {\r\n      // TODO\r\n      return this._position;\r\n    }\r\n\r\n    /* ------------------ */\r\n    /* Food Pursuit       */\r\n    /* ------------------ */\r\n    if (\r\n      !this._idOfFood || // missing food ID\r\n      !this._locationOfFood || // missing food location\r\n      !foods[this._idOfFood] || // food is gone from foods object\r\n      doesOccurWithProbability(this._boredomFood) // bored looking for food?\r\n    ) {\r\n      this._isSeekingFood = false;\r\n      this._idOfFood = null;\r\n      this._locationOfFood = null;\r\n    }\r\n    if (this._isSeekingFood) {\r\n      this.changeDirection(\r\n        arctan(\r\n          this._locationOfFood.y - this._position.y,\r\n          this._locationOfFood.x - this._position.x\r\n        )\r\n      );\r\n      return getNewPosition(\r\n        this._position,\r\n        this._speed,\r\n        this._direction,\r\n        xmin, xmax, ymin, ymax\r\n      );\r\n    }\r\n\r\n    /* ------------------ */\r\n    /* Wandering          */\r\n    /* ------------------ */\r\n    const likelihoodSelector = {\r\n      'left': this._likelihoodTurnLeft,\r\n      'right': this._likelihoodTurnRight,\r\n      'center': 1 - (this._likelihoodTurnLeft + this._likelihoodTurnRight),\r\n    };\r\n\r\n    const selectedDirection = selectOutcomeWithProbabilities(likelihoodSelector);\r\n    const directionModifier = getRandomValueInRange(\r\n      this._angleTurn - this._variationAngleTurn,\r\n      this._angleTurn + this._variationAngleTurn\r\n    );\r\n    switch (selectedDirection) {\r\n      case 'left':\r\n        this.changeDirection(this._direction + directionModifier);\r\n        break;\r\n      case 'right':\r\n        this.changeDirection(this._direction - directionModifier);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return getNewPosition(\r\n      this._position,\r\n      this._speed,\r\n      this._direction,\r\n      xmin, xmax, ymin, ymax\r\n    );\r\n  }\r\n\r\n  scanSurroundingsAndUpdateState(creatures, foods) {\r\n    if (this._isSeekingFood || this._isSeekingMate) { return; }\r\n    let nearbyFoods = getFoodsInProximity(this._position, foods);\r\n    let nearbyCreatures = getCreaturesInProximity(this._position, foods);\r\n\r\n    if (isEmpty(nearbyFoods) && isEmpty(nearbyCreatures)) { return; }\r\n    if (isEmpty(nearbyFoods)) {\r\n      // TODO: case with only creatures nearby\r\n      return;\r\n    }\r\n    if (isEmpty(nearbyCreatures)) {\r\n      if (doesOccurWithProbability(this._likelihoodPursueFood)) {\r\n        const randomFoodId = Object.keys(nearbyFoods)[0];\r\n        this._isSeekingFood = true;\r\n        this._idOfFood = randomFoodId;\r\n        this._locationOfFood = nearbyFoods[randomFoodId].position;\r\n      } else {\r\n        this._isSeekingFood = false;\r\n        this._idOfFood = null;\r\n        this._locationOfFood = null;\r\n      }\r\n    }\r\n    // TODO: case with both creatues and food nearby\r\n  }\r\n\r\n  // Tie goes to the target creature, not the opponent\r\n  performCombat(opponent) {\r\n    if (this.strength >= opponent.strength) {\r\n      return new CreatureCombatResult(\r\n        this.id,\r\n        Math.max(this.energy - this.energyLostToCombat, 0),\r\n        opponent.id,\r\n        opponent.energy\r\n      );\r\n    }\r\n\r\n    return new CreatureCombatResult(\r\n      opponent.id,\r\n      Math.max(opponent.energy - opponent.energyLostToCombat, 0),\r\n      this.id,\r\n      this.energy\r\n    );\r\n  }\r\n\r\n  produceChild(mate) {\r\n    this.energy = this.energy - this.energyLostToChild;\r\n    return new Creature(\r\n      (this.speed + mate.speed) / 2,\r\n      (this.strength + mate.strength) / 2,\r\n      (this.boredomFood + mate.boredomFood) / 2,\r\n      (this.boredomMate + mate.boredomMate) / 2,\r\n      (this.energyLostToChild + mate.energyLostToChild) / 2,\r\n      (this.energyLostToCombat + mate.energyLostToCombat) / 2,\r\n      (this.likelihoodPursueFood + mate.likelihoodPursueFood) / 2,\r\n      (this.matingAgreeableness + mate.matingAgreeableness) / 2,\r\n      (this.likelihoodTurnRight + mate.likelihoodTurnRight) / 2,\r\n      (this.likelihoodTurnLeft + mate.likelihoodTurnLeft) / 2,\r\n      (this.angleTurn + mate.angleTurn) / 2,\r\n      (this.variationAngleTurn + mate.variationAngleTurn) / 2\r\n    );\r\n  }\r\n};\r\n","import { FOOD_WIDTH, FOOD_HEIGHT } from '../constants/Constants';\r\n\r\nconst CanvasFood = (context, food) => {\r\n  context.fillStyle = 'red';\r\n  context.fillRect(food.x, food.y, FOOD_WIDTH, FOOD_HEIGHT);\r\n};\r\n\r\nexport default CanvasFood;\r\n","import {\r\n  CREATURE_WIDTH,\r\n  CREATURE_HEIGHT,\r\n  SIGHT_RADIUS,\r\n  CREATURE_DIRECTION_DEBUG_ARROW_LENGTH,\r\n  CREATURE_DIRECTION_DEBUG_ARROW_TIP_RADIUS,\r\n} from '../constants/Constants';\r\n\r\nconst CanvasCreature = ({\r\n  context,\r\n  creature,\r\n  showVisionCircle,\r\n  showDirection,\r\n  isSelected,\r\n}) => {\r\n  context.fillStyle = isSelected ? 'purple' : 'blue';\r\n  context.fillRect(creature.position.x, creature.position.y, CREATURE_WIDTH, CREATURE_HEIGHT);\r\n\r\n  if (showVisionCircle) {\r\n    context.beginPath();\r\n    context.arc(creature.position.x, creature.position.y, SIGHT_RADIUS, 0, 2 * Math.PI);\r\n    context.lineWidth = 0.5;\r\n    context.stroke();\r\n  }\r\n\r\n  if (showDirection) {\r\n    // Set up where the tip of the direction arrow goes\r\n    const dir = creature.direction;\r\n    const tipX = creature.position.x + Math.cos(dir) * CREATURE_DIRECTION_DEBUG_ARROW_LENGTH;\r\n    const tipY = creature.position.y + Math.sin(dir) * CREATURE_DIRECTION_DEBUG_ARROW_LENGTH;\r\n\r\n    // Draw line\r\n    context.beginPath();\r\n    context.moveTo(creature.position.x, creature.position.y);\r\n    context.lineTo(tipX, tipY);\r\n    context.lineWidth = 1;\r\n    context.stroke();\r\n    context.beginPath();\r\n\r\n    // Draw line tip (currently a circle)\r\n    context.beginPath();\r\n    context.arc(tipX, tipY, CREATURE_DIRECTION_DEBUG_ARROW_TIP_RADIUS, 0, 2 * Math.PI);\r\n    context.fillStyle = 'black';\r\n    context.fill();\r\n  }\r\n};\r\n\r\nexport default CanvasCreature;\r\n","import { Grey1 } from './Theme';\n\n// Alignment\nexport const FlexCenterRow = `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const FlexCenterColumn = `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\n// Text\nexport const Header1 = `\n  font-size: 64px;\n  font-weight: 600;\n  color: ${Grey1};\n`;\n\nexport const Subheader1 = `\n  font-size: 32px;\n  font-weight: 400;\n  color: ${Grey1};\n`;\n","export const Grey1 = '#191919';\nexport const Grey4 = '#d9dde0';\nexport const Grey6 = '#efefef';\n\nexport const Primary1 = '#4286f4';\n\nexport const Background1 = '#f0f6ff';\n","import styled from 'styled-components';\r\nimport { FlexCenterRow } from '../constants/Mixins';\r\nimport { Background1 } from '../constants/Theme';\r\n\r\nexport const ControlPanelWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 450px;\r\n  padding: 5px;\r\n  background-color: ${Background1};\r\n`;\r\n\r\nexport const ControlPanelRowWrapper = styled.div`\r\n  display: flex;\r\n  :not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const SliderWrapper = styled.div`\r\n  ${FlexCenterRow};\r\n  width: 300px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  ${FlexCenterRow};\r\n  width: 100px;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  ${FlexCenterRow};\r\n  width: 100px;\r\n`;\r\n","import React from 'react';\r\n\r\n/* Child Components */\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/* Styled Components */\r\nimport {\r\n  ControlPanelWrapper,\r\n  ControlPanelRowWrapper,\r\n  SliderWrapper,\r\n  ButtonWrapper,\r\n  InputWrapper\r\n} from '../styles/ControlPanel';\r\nimport { SIMULATION_SPEED_SLIDER_MIN, SIMULATION_SPEED_SLIDER_MAX } from '../constants/Constants';\r\n\r\nconst ControlPanel = ({\r\n  creaturesToSpawn,\r\n  simulationSpeed,\r\n  showVisionCircles,\r\n  showDirections,\r\n  handleSpeedUpdate,\r\n  handleClickPause,\r\n  handleUpdateCreaturesToSpawn,\r\n  handleClickSpawnCreatures,\r\n  handleClickShowVisionCircles,\r\n  handleClickShowDirections,\r\n}) => {\r\n  const onChangeSpeed = (event, value) => {\r\n    handleSpeedUpdate(value);\r\n  };\r\n\r\n  const onChangeCreaturesToSpawn = event => {\r\n    handleUpdateCreaturesToSpawn(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <ControlPanelWrapper>\r\n      <ControlPanelRowWrapper>\r\n        <ButtonWrapper>\r\n          <Button onClick={handleClickPause}>Pause</Button>\r\n        </ButtonWrapper>\r\n        <SliderWrapper>\r\n          <Slider\r\n            min={SIMULATION_SPEED_SLIDER_MIN}\r\n            max={SIMULATION_SPEED_SLIDER_MAX}\r\n            value={simulationSpeed}\r\n            onChange={onChangeSpeed}\r\n          />\r\n        </SliderWrapper>\r\n      </ControlPanelRowWrapper>\r\n      <ControlPanelRowWrapper>\r\n        <ButtonWrapper>\r\n          <Button\r\n            onClick={handleClickSpawnCreatures}\r\n          >Spawn</Button>\r\n        </ButtonWrapper>\r\n        <InputWrapper>\r\n          <Input\r\n            value={creaturesToSpawn}\r\n            onChange={onChangeCreaturesToSpawn}\r\n          />\r\n        </InputWrapper>\r\n      </ControlPanelRowWrapper>\r\n      <ControlPanelRowWrapper>\r\n        <Typography>\r\n          Show Vision Radius\r\n        </Typography>\r\n        <Checkbox checked={showVisionCircles} onChange={handleClickShowVisionCircles} />\r\n      </ControlPanelRowWrapper>\r\n      <ControlPanelRowWrapper>\r\n        <Typography>\r\n          Show Directions\r\n        </Typography>\r\n        <Checkbox checked={showDirections} onChange={handleClickShowDirections} />\r\n      </ControlPanelRowWrapper>\r\n    </ControlPanelWrapper>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n","import styled from 'styled-components';\r\nimport { Background1 } from '../constants/Theme';\r\n\r\nexport const CreatureInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 450px;\r\n  padding: 5px;\r\n  background-color: ${Background1};\r\n`;\r\n\r\nexport const CreatureInfoPiece = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React from 'react';\r\n\r\n/* Constants */\r\n\r\n/* Utils */\r\n\r\n/* Child Components */\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/* Styled Components */\r\nimport {\r\n  CreatureInfoWrapper,\r\n  CreatureInfoPiece,\r\n} from '../styles/CreatureInfo';\r\n\r\nconst CreatureInfo = ({\r\n  creature,\r\n}) => {\r\n  const renderStatus = () => {\r\n    const statusObj = creature.status;\r\n    return Object.keys(statusObj).map(status => (\r\n      <CreatureInfoPiece key={status}>\r\n        <Typography>{statusObj[status].displayName}</Typography>\r\n        <Typography>{statusObj[status].value}</Typography>\r\n      </CreatureInfoPiece>\r\n    ));\r\n  };\r\n\r\n  const renderGenes = () => {\r\n    const genesObj = creature.genes;\r\n    return Object.keys(genesObj).map(gene => (\r\n      <CreatureInfoPiece key={gene}>\r\n        <Typography>{genesObj[gene].displayName}</Typography>\r\n        <Typography>{genesObj[gene].value}</Typography>\r\n      </CreatureInfoPiece>\r\n    ));\r\n  };\r\n\r\n  return creature\r\n    ? (\r\n      <CreatureInfoWrapper>\r\n        <h2>Status</h2>\r\n        {renderStatus()}\r\n        <h2>Genes</h2>\r\n        {renderGenes()}\r\n      </CreatureInfoWrapper>\r\n    ) : <div>Select a creature by clicking on it</div>;\r\n};\r\n\r\nexport default CreatureInfo;\r\n","import styled from 'styled-components';\r\nimport { Grey1 } from '../constants/Theme';\r\n\r\nexport const CanvasWrapper = styled.div`\r\n  margin: 25px;\r\n  display: flex;\r\n`;\r\n\r\nexport const ColumnWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  :not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const MainCanvas = styled.canvas`\r\n  margin-top: 5px;\r\n  border: 1px solid ${Grey1};\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\n/* Constants */\r\nimport {\r\n  FOOD_SPAWN_PROBABILITY,\r\n  FOOD_WIDTH,\r\n  FOOD_HEIGHT,\r\n  CREATURE_WIDTH,\r\n  CREATURE_HEIGHT,\r\n  WORLD_CANVAS_WIDTH,\r\n  WORLD_CANVAS_HEIGHT,\r\n  DEFAULT_INITIAL_CREATURES\r\n} from '../constants/Constants';\r\n\r\n/* Utils */\r\nimport { Timestamp, Food, Creature, Position } from '../constants/Classes';\r\nimport { doesOccurWithProbability, getRandomPosition, generateUniqueId, isInRectangleWithBottomRight } from '../utils/UtilFunctions';\r\nimport { updateCreaturePositons } from '../utils/CreatureLogic';\r\nimport { useInterval } from '../utils/Hooks';\r\n\r\n/* Child Components */\r\nimport CanvasFood from './CanvasFood';\r\nimport CanvasCreature from './CanvasCreature';\r\nimport ControlPanel from './ControlPanel';\r\nimport CreatureInfo from './CreatureInfo';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/* Styled Components */\r\nimport { CanvasWrapper, MainCanvas, ColumnWrapper } from '../styles/WorldCanvas';\r\n\r\nconst WorldCanvas = () => {\r\n  /* ------------------ */\r\n  /* Refs               */\r\n  /* ------------------ */\r\n  const canvasDom = useRef(null);\r\n\r\n  const foods = useRef({});\r\n  const creatures = useRef({});\r\n\r\n  /* ------------------ */\r\n  /* State              */\r\n  /* ------------------ */\r\n\r\n  const [ creaturesToSpawn, setCreaturesToSpawn ] = useState(DEFAULT_INITIAL_CREATURES);\r\n\r\n  const [canvasContext, setCanvasContext] = useState(null);\r\n  const [lastTimestampProcessed, setLastTimestampProcessed] = useState(null);\r\n  const [timestamp, setTimestamp] = useState(new Timestamp());\r\n  const [simulationSpeed, setSimulationSpeed] = useState(1000);\r\n  const [simulationPaused, setSimulationPaused] = useState(false);\r\n\r\n  // Debug stuff for creatures\r\n  const [showVisionCircles, setShowVisionCircles] = useState(false);\r\n  const [showDirections, setShowDirections] = useState(false);\r\n  const [creatureInfoId, setCreatureInfoId] = useState(null);\r\n\r\n  /* ------------------ */\r\n  /* Effects            */\r\n  /* ------------------ */\r\n\r\n  // sets canvas context onload\r\n  useEffect(() => {\r\n    setCanvasContext(canvasDom.current.getContext('2d'));\r\n  }, []);\r\n\r\n  // sets loop for incrementing the simulation time\r\n  useInterval(() => {\r\n    setTimestamp(timestamp.incBySec(1));\r\n  }, simulationPaused ? null : 1000 * 1000 / simulationSpeed);\r\n\r\n  // decides if a new food drops when the timestamp changes and adds it if it does\r\n  useEffect(() => {\r\n    if (!canvasContext) { return; }\r\n    if (doesOccurWithProbability(FOOD_SPAWN_PROBABILITY)) {\r\n      const width = canvasContext.canvas.clientHeight - FOOD_WIDTH;\r\n      const height = canvasContext.canvas.clientHeight - FOOD_HEIGHT;\r\n      const id = generateUniqueId();\r\n      foods.current[id] = new Food(id, getRandomPosition(0, width, 0, height));\r\n    }\r\n  }, [timestamp]);\r\n\r\n  // Listens for clicks on canvas to decide whether or not to display debug\r\n  const handleClickScreen = event => {\r\n    if (!creatures || !creatures.current) { return; }\r\n    const positionClicked = new Position(event.offsetX, event.offsetY);\r\n    for (const id in creatures.current) {\r\n      const creature = creatures.current[id];\r\n      if (\r\n        isInRectangleWithBottomRight(\r\n          positionClicked,\r\n          creature.position,\r\n          CREATURE_WIDTH,\r\n          CREATURE_HEIGHT\r\n        )\r\n      ) {\r\n        if (id === creatureInfoId) {\r\n          setCreatureInfoId(null);\r\n          return;\r\n        }\r\n        setCreatureInfoId(id);\r\n        return;\r\n      }\r\n    }\r\n    setCreatureInfoId(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    canvasDom.current.addEventListener('click', handleClickScreen);\r\n    return () => canvasDom.current.removeEventListener('click', handleClickScreen);\r\n  }, []);\r\n\r\n  /* ------------------ */\r\n  /* Rendering          */\r\n  /* ------------------ */\r\n\r\n  const renderFood = () => {\r\n    Object.keys(foods.current).forEach(id => {\r\n      CanvasFood(canvasContext, foods.current[id]);\r\n    });\r\n  };\r\n\r\n  const updateCreaturesObject = () => {\r\n    const width = canvasContext.canvas.clientHeight - CREATURE_WIDTH;\r\n    const height = canvasContext.canvas.clientHeight - CREATURE_HEIGHT;\r\n    updateCreaturePositons(creatures.current, foods.current, 0, width, 0, height);\r\n  };\r\n\r\n  const renderCreatures = () => {\r\n    Object.keys(creatures.current).forEach(id => {\r\n      CanvasCreature({\r\n        context: canvasContext,\r\n        creature: creatures.current[id],\r\n        showVisionCircle: showVisionCircles,\r\n        showDirection: showDirections,\r\n        isSelected: id === creatureInfoId,\r\n      });\r\n    });\r\n  };\r\n\r\n  const renderObjects = () => {\r\n    if (!canvasContext) { return null; }\r\n\r\n    canvasContext.clearRect(0, 0, canvasDom.current.width, canvasDom.current.height);\r\n    // Only recalculate objects if the simulation has advanced\r\n    if (\r\n      lastTimestampProcessed === null ||\r\n      timestamp.totalSeconds !== lastTimestampProcessed.totalSeconds\r\n    ) {\r\n      updateCreaturesObject();\r\n      setLastTimestampProcessed(timestamp);\r\n    }\r\n    renderFood();\r\n    renderCreatures();\r\n  };\r\n\r\n  /* ------------------ */\r\n  /* Handlers           */\r\n  /* ------------------ */\r\n\r\n  const handleSpawnCreatures = () => {\r\n    for (let i = 0; i < creaturesToSpawn; i++) {\r\n      const width = canvasContext.canvas.clientHeight - CREATURE_WIDTH;\r\n      const height = canvasContext.canvas.clientHeight - CREATURE_HEIGHT;\r\n      const id = generateUniqueId();\r\n      creatures.current[id] = new Creature({\r\n        id,\r\n        position: getRandomPosition(0, width, 0, height),\r\n      });\r\n    }\r\n  };\r\n\r\n  /* ------------------ */\r\n  /* Getters            */\r\n  /* ------------------ */\r\n\r\n  const getShowCreature = () => {\r\n    if (!creatures || !creatures.current || !creatureInfoId) { return null; }\r\n    return creatures.current[creatureInfoId];\r\n  };\r\n\r\n  /* ------------------ */\r\n  /* Component          */\r\n  /* ------------------ */\r\n\r\n  return (\r\n    <CanvasWrapper>\r\n      <ColumnWrapper>\r\n        <Typography>{timestamp.stringOut}</Typography>\r\n        <Typography>{`Simulation Speed: ${simulationPaused ? 'Paused' : `${simulationSpeed / 1000} sim. sec / IRL sec`}`}</Typography>\r\n        <ControlPanel\r\n          simulationSpeed={Math.floor(simulationSpeed / 1000)}\r\n          creaturesToSpawn={creaturesToSpawn}\r\n          showVisionCircles={showVisionCircles}\r\n          showDirection={showDirections}\r\n          handleSpeedUpdate={val => setSimulationSpeed(val * 1000)}\r\n          handleClickPause={() => setSimulationPaused(!simulationPaused)}\r\n          handleUpdateCreaturesToSpawn={val => setCreaturesToSpawn(val)}\r\n          handleClickSpawnCreatures={() => handleSpawnCreatures()}\r\n          handleClickShowVisionCircles={() => setShowVisionCircles(!showVisionCircles)}\r\n          handleClickShowDirections={() => setShowDirections(!showDirections)}\r\n        />\r\n        <MainCanvas ref={canvasDom} width={WORLD_CANVAS_WIDTH} height={WORLD_CANVAS_HEIGHT} />\r\n        {renderObjects()}\r\n      </ColumnWrapper>\r\n      <ColumnWrapper>\r\n        <CreatureInfo creature={getShowCreature()} />\r\n      </ColumnWrapper>\r\n    </CanvasWrapper>\r\n  );\r\n};\r\n\r\nexport default WorldCanvas;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// function from Dan Abramov's blog at\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","\r\n// Mutates creatures object based off genes\r\nexport const updateCreaturePositons = (creatures, foods, xmin, xmax, ymin, ymax) => {\r\n  const creatureIds = creatures ? Object.keys(creatures) : [];\r\n  creatureIds.forEach(id => {\r\n    const creature = creatures[id];\r\n    // If creature is not wandering, this decides if the creature will start pursuing something\r\n    creature.scanSurroundingsAndUpdateState(creatures, foods);\r\n    // Detects if the creature is on any food, and mutates the foods object accordingly\r\n    creature.consumeFoods(foods);\r\n    // This decides if the creature is bored with its current activity and sets the new position accordingly\r\n    creature.changePosition(creature.nextPosition(creatures, foods, xmin, xmax, ymin, ymax));\r\n    // Did the creature run out of energy?\r\n    if (creature.isDead) {\r\n      delete creatures[id];\r\n    }\r\n  });\r\n};\r\n","import styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n  width: 100%;\n`;\n","import React from 'react';\n\n/* Child Components */\nimport WorldCanvas from './WorldCanvas';\n\n/* Styled Components */\nimport { AppWrapper } from '../styles/App';\n\nconst App = () => (\n  <AppWrapper>\n    <WorldCanvas />\n  </AppWrapper>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}